version: 1.0

example1: 
  Request: |-
    하늘을 바라봐줘
  Response: 
    Observation: |-
      The current screenshot shows a bookshelf with books and a wooden floor. The camera is positioned low, close to the floor, and facing the bookshelf.
    Thought: |-
      To fulfill the user's request to 'look at the sky,' I need to move the camera upwards
    Function: |-
      cameramove
    Args: 
      {"pan": 90, "tile": 30}
    Status: |-
      FINISH
    Plan: |-
      <FINISH>
    Comment: |-
      The current camera view is low and facing a bookshelf. I will move the camera upwards to look at the sky as requested.
  Tips: |-


example2: 
  Request: |- 
     Activate the buzzer to make a sound.
  Response: 
    Observation: |-
      The current screenshot shows a room with gym equipment, including dumbbells and a bench. There is also a bookshelf with books visible on the left side. The camera is positioned low, close to the floor, and facing the gym equipment and bookshelf.
    Thought: |-
      To fulfill the user's request to sound the buzzer and move around in a circle, I need to first activate the buzzer and then navigate the car in a circular path.
    Function: |-
      buzzer
    Args:
      {}
    Status: |-
      FINISH
    Plan: |-
      <FINISH>
    Comment: |-
      The robot has finished sounding the buzzer.
  Tips: |-
   


example3: 
  Request: |- 
    주위에 사람이 있는지 확인 해줘
  Response: 
    Observation: |-
      The current screenshot shows a black bag on a wooden floor. The camera is positioned low and facing the bag.
    Thought: |-
      Base on the screenshots and request, I have to raise my head and turn 90 degrees to observe people.
    Function: |-
      cameramove
    Args:
      {"pan": 90, "tile": 20}
    Status: |-
      CONTINUE
    Plan: |-
      (1) Turn 90 degrees to the right.
      (2) Observe the new view to check if there is a person in front.
      (3) If a person is unvisible, Turn 90 degrees.
      (4) If a person is visible, describe the person in detail.
    Comment: |-
      he current camera view is low and facing a black bag. I will rotate the camera 90 degrees to the right to look for a person as requested.
  Tips: |-
    - It looks at the environment and infers whether there are people.



example4:
  Request: |-
    앞에 있는 물체를 피해서 앞으로 가줘
  Response: 
    Observation: |-
      The current screenshot shows a room with gym equipment, including a dumbbell and other weights on the floor. The camera is positioned low, close to the floor, and facing the gym equipment.
    Thought: |-
      To fulfill the user's request to move forward while avoiding the object in front, I need to navigate around the dumbbell.and Since the previous distance was 0.51m, move about 40cm and then tilt your head again.
    Function: |-
      carleft
    Args:
      {"angle": 45}
    Status: |-
      CONTINUE
    Plan: |-
      (1) Move the car slightly to the left to avoid the dumbbell.
      (2) Based on the measured distance, move the car forward to proceed past the dumbbell.
      (3) Move the car slightly to the right to return to the original path.
    Comment: |-
      If you collide with an object, problems may arise, so take your time when moving.
  Tips: |-
    

example5:
  Request: |-
    2층 책장에서 총,균,쇠 라는 책은 오른쪽에서 몇 번째에 꽃혀 있는지 알려줘
  Response: 
    Observation: |-
      The screenshot shows that I am on the editing window of a Word file. The search box is visible and the word 'UFO' is already inputted. The previous action of inputting 'UFO' took effect based on the screenshot of the last step.
    Thought: |-
      Base on the screenshots, the word 'UFO' is already inputted in the Edit control named 'Find'. I need to click the Find button to search for the word 'UFO' in the document, and the task is finished.
    Function: |-
      click_input
    Args: 
      {"button": "left", "double": false}
    Status: |-
      FINISH
    Plan: |-
      <FINISH>
    Comment: |-
      I searched for the word 'UFO' in the document successfully. The user should view the search result.
  Tips: |-
    - If there are steps already taken (e.g., the required text is already inputted edit box), you do not need to repeat them. You can skip the steps that have already been taken and move to the next step. 


example6:
  Request: |-
    Send an message to Tom on Teams by including a (1) the text extracted from framework.docx, (2) and a detailed description of the workflow of the framework in the image of framework.png.
  Response: 
    Observation: |-
      The screenshot shows that I am on the main window of the Word file named 'framework.docx'. The text of the file, which I am interest, is visible in the screenshot. The last action took effect by opening the document successfully, if looking at the previous screenshot.
    Thought: |-
      Base on the screenshots and the control item list, I need to use the 'GetText' action to get the text of the Document control named 'framework.docx'. Given the previous plan, this completes the partial user request on the framework.docx, and therefore I need to set the status as 'APP_SELECTION' immediately to switch to the image of framework.png to complete the next task.
    Function: |-
      texts
    Args: {}
    Status: |-
      APP_SELECTION
    Plan: |-
      (1) Switch to the image of framework.png to complete the next task, the current status need to set to 'APP_SELECTION'.
      (2) Describe in detail the workflow of the framework in the image of framework.png base on the screenshot of the image.
      (3) Switch to the Teams application.
      (4) Open the chat window with Tom.
      (5) Input the text of the Document control named 'framework.docx' and the description of the workflow of the framework in the image of framework.png in the Edit control named 'Type a new message'. These information can be extracted from the results from my history steps and I will use them to compose the message.
      (6) Click the Send button to send the message. This action is sensitive to the system and need to be confirmed by the user. I need to confirm the action before clicking the Send button. If the user confirms the action, the task is finished.
    Comment: |-
      The partial tasks on 'framework.docx' is completed once I take the current action. I need to set Status immediately to 'APP_SELECTION' to switch to the image of framework.png to complete the next task.
  Tips: |-
    - In Word application, the main canva is a Document control, and the text of the document can be extracted by using the 'GetText' action.
    - After extracting the text of the document, I need to set the status as 'APP_SELECTION' immediately to switch to the image of framework.png to complete the next task.


example7:
  Request: |-
    Quickly remove all notes in the presentation.pptx, without looping through each slide.
  Response: 
    Observation: |-
      The current screenshot shows the PowerPoint application with the 'presentation.pptx' file open. The 'File Tab' button is visible, which is needed to access the backstage view where the 'Check for Issues' option is located. This matches the next step in the previous plan. The application appears to be in the normal editing view, and no backstage view or other menus are open at this time.
    Thought: |-
      The user request to do it quickly. To make the task more efficient, I need to use some fast but niche tricks using the 'Remove All Presentation Notes' function.  To do so, I need to first click the 'File' button to open the menu.
    Function: |-
      click_input
    Args: 
      {"button": "left", "double": false}
    Status: |-
      CONTINUE
    Plan: |-
      (1) Click the 'Info' ListItem, to access the 'Info' page.
      (2) Click the 'Check for Issues' MenuItem, to open a menu for checking.
      (3) Click the 'Inspect Document', to open a document inspector.
      (4) Click the 'Inspect' button, to inspect the ppt for notes.
      (5) I should now find and click the 'Remove All Presentation Notes'. However, this button is usually at the bottom of the menu, and therefore I should apply wheel_mouse_input(wheel_dist=-20) to a ScrollBar to reach the menu bottom to make this button visible.
      (6) Once 'Remove All Presentation Notes' is visible, I should click it to remove all notes in the presentation.pptx file. This action is sensitive to the system and need to be confirmed by the user.
    Comment: |-
      I plan to use the 'Remove All Presentation Notes' function. This is the fastest way to remove all notes in the presentation.pptx file.
  Tips: |-
    - The 'Remove All Presentation Notes' function is the fastest way to remove all notes in the presentation.pptx file. I should use this function to complete the task quickly instead of looping through each slide.
    - The 'Remove All Presentation Notes' is usually at the bottom of the menu, and I should apply wheel_mouse_input(wheel_dist=-20) to a ScrollBar to reach the menu bottom to make this button visible.


example8:
  Request: |-
    How many stars does the Imdiffusion repo have?
  Response: 
    Observation: |-
      I observe that the Edge browser is visible in the screenshot, with the Google search page opened.
    Thought: |-
      I need to input the text 'Imdiffusion GitHub' in the search box of Google to get to the Imdiffusion repo page from the search results. The search box is usually in a type of ComboBox.
    Function: |-
      set_edit_text
    Args: 
      {"text": "Imdiffusion GitHub"}
    Status: |-
      CONTINUE
    Plan: |-
      (1) After input 'Imdiffusion GitHub', click Google Search to search for the Imdiffusion repo on github.
      (2) Once the searched results are visible, click the Imdiffusion repo Hyperlink in the searched results to open the repo page.
      (3) Observing and summarize the number of stars the Imdiffusion repo page, and reply to the user request.
    Comment: |-
      I plan to use Google search for the Imdiffusion repo on github and summarize the number of stars the Imdiffusion repo page visually.
  Tips: |-
    - The search box is usually in a type of ComboBox.
    - The number of stars of a Github repo page can be found in the repo page visually.


example9: 
  Request: |- 
    Please remind me to get party dinner (5 people) preparation done before 5PM today with steps and notes.
  Response: 
    Observation: |-
      The current screenshot shows that I am on the Microsoft To Do application. The application is open and there is a edit block at the bottom for inputting the task.
    Thought: |-
      I need to add a task of 'Get party dinner (5 people) preparation done before 5PM today.' to the edit block of 'Add a task in “My Day”'. I also need to set more details for the task afterwards, including adding steps and notes.
    Function: |-
      set_edit_text
    Args: 
      {"text": "Get party dinner (5 people) preparation done before 5PM today."}
    Status: |-
      CONTINUE
    Plan: |-
      (1) Click the ListItem of the task that was just created to set more details.
      (2) Add a step 1 for the task by inputing 'Menu Planning and Ingredient Acquisition' in the Add step edit control.
      (3) Add a step 2 for the task by inputing 'Meal Preparation Schedule' in the Add step edit control following the step one.
      (4) Add a step 3 for the task by inputing 'Setting Up the Dining Area' in the Add step edit control following the step two.
      (5) Add a note to this task in the 'Add note' edit blocking at the bottom by inputing 'Considering preferences, dietary restrictions and food allergiesof the guests.'.
      (6) Close the details view by clicking the 'Dismiss detail view' botton.
    Comment: |-
      After creating the task, I need to set more details for the reminder, including adding steps and notes.
  Tips: |-
    - You need to add more details for the task, including adding steps and notes.
    - You need to add each step one by one and add notes to the task.



example10:
  Request: |-
      Please create a slide from the meeting_notes.docx in the presentation1.pptx.
  Response: 
    Observation: |-
      The current screenshot shows that I am on the Microsoft PowerPoint application. The Copilot Add-in is visible in the screenshot.
    Thought: |-
      I need to click the Copilot Add-in, which can help me create a slide from the meeting_notes.docx. The Copilot Add-in can directly create a slide from the meeting_notes.docx.
    Function: |- 
      click_input
    Args: 
      {"button": "left", "double": false}
    Status: |-
      CONTINUE
    Plan: |-
      (1) Click the 'Create presentation from file' button to open a file picker.
      (2) When the 'meeting_notes' is visible in the file picker, select and click the "meeting_notes" ListItem to create a slide.
      (3) Click the 'Send' buttom to send the request to Copilot. This completes the task.
    Comment: |-
      I need to use the Copilot Add-in to create a slide from the meeting_notes.docx.
  Tips: |-
    - The Copilot Add-in can directly create a slide from the meeting_notes.docx. You need to use the Copilot Add-in to complete the task, instead of manually creating a slide from the meeting_notes.docx.


example11: 
  Request: |-
    Save the presentation1.pptx into pdf format.
  Response: 
    Observation: |-
      The current screenshot shows the powerpoint application is visible, and the presentation1.pptx is opened.
    Thought: |- 
      I need to click the 'File' button, to make the the 'Save As Adobe PDF' button available. Then I need to click the 'Save As Adobe PDF' button to save the presentation1.pptx into pdf format. If the 'Save As Adobe PDF' button is not visible in the screenshot, I may need to use the 'Save a Copy' button to manually save the presentation1.pptx into pdf format.
    Function: |-  
      click_input
    Args: 
      {"button": "left", "double": false}
    Status: |-
      CONTINUE
    Plan: |-
      (1) Click the "Save As Adobe PDF" button to open the save as dialog. 
      (2) Click the "Save" button to save the presentation1.pptx into pdf format. This completes the task.
    Comment: |-
      I need to use the "Save As Adobe PDF" button to save the presentation1.pptx into pdf format.
  Tips: |-
    - Saving the presentation1.pptx into pdf format can be done by clicking the "Save As Adobe PDF" button.
    - If the "Save As Adobe PDF" button is not visible in the screenshot, you may need to use the "Save a Copy" button to manually save the presentation1.pptx into pdf format.

